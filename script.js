// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
const profiles = [
    {
        id: 1,
        name: "–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞",
        age: 28,
        location: "–ú–æ—Å–∫–≤–∞",
        interests: ["–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–ö–∏–Ω–æ", "–ò—Å–∫—É—Å—Å—Ç–≤–æ"],
        gender: "–ñ–µ–Ω—Å–∫–∏–π",
        online: true,
        lastOnline: "–¢–æ–ª—å–∫–æ —á—Ç–æ"
    },
    {
        id: 2,
        name: "–ò–≤–∞–Ω –°–∏–¥–æ—Ä–æ–≤",
        age: 32,
        location: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        interests: ["–°–ø–æ—Ä—Ç", "–ú—É–∑—ã–∫–∞", "–ö–Ω–∏–≥–∏"],
        gender: "–ú—É–∂—Å–∫–æ–π",
        online: false,
        lastOnline: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥"
    },
    {
        id: 3,
        name: "–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞",
        age: 25,
        location: "–ö–∞–∑–∞–Ω—å",
        interests: ["–ö–Ω–∏–≥–∏", "–ö–∏–Ω–æ", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è"],
        gender: "–ñ–µ–Ω—Å–∫–∏–π",
        online: true,
        lastOnline: "–¢–æ–ª—å–∫–æ —á—Ç–æ"
    },
    {
        id: 4,
        name: "–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤",
        age: 30,
        location: "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫",
        interests: ["–°–ø–æ—Ä—Ç", "–ê–≤—Ç–æ–º–æ–±–∏–ª–∏", "–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏"],
        gender: "–ú—É–∂—Å–∫–æ–π",
        online: false,
        lastOnline: "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥"
    },
    {
        id: 5,
        name: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –°–º–∏—Ä–Ω–æ–≤–∞",
        age: 29,
        location: "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥",
        interests: ["–ò—Å–∫—É—Å—Å—Ç–≤–æ", "–ú—É–∑—ã–∫–∞", "–¢–∞–Ω—Ü—ã"],
        gender: "–ñ–µ–Ω—Å–∫–∏–π",
        online: false,
        lastOnline: "5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥"
    },
    {
        id: 6,
        name: "–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤",
        age: 35,
        location: "–ú–æ—Å–∫–≤–∞",
        interests: ["–ë–∏–∑–Ω–µ—Å", "–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏", "–°–ø–æ—Ä—Ç"],
        gender: "–ú—É–∂—Å–∫–æ–π",
        online: true,
        lastOnline: "–¢–æ–ª—å–∫–æ —á—Ç–æ"
    },
    {
        id: 7,
        name: "–û–ª—å–≥–∞ –ù–æ–≤–∏–∫–æ–≤–∞",
        age: 26,
        location: "–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥",
        interests: ["–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è", "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", "–ï–¥–∞"],
        gender: "–ñ–µ–Ω—Å–∫–∏–π",
        online: false,
        lastOnline: "3 –¥–Ω—è –Ω–∞–∑–∞–¥"
    },
    {
        id: 8,
        name: "–ê—Ä—Ç–µ–º –§–µ–¥–æ—Ä–æ–≤",
        age: 31,
        location: "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥",
        interests: ["–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ì–µ–π–º–∏–Ω–≥", "–ù–∞—É–∫–∞"],
        gender: "–ú—É–∂—Å–∫–æ–π",
        online: true,
        lastOnline: "–¢–æ–ª—å–∫–æ —á—Ç–æ"
    }
];

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω—ã—Ö –∞–≤–∞—Ç–∞—Ä–æ–∫
const getRandomAvatar = (id) => {
    const colors = ['#ff4b7d', '#8e44ad', '#3498db', '#2ecc71', '#e67e22', '#1abc9c'];
    return colors[id % colors.length];
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
let messages = JSON.parse(localStorage.getItem('datingMessages')) || {};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–º–æ–¥–∑–∏
const emojis = ['‚ù§Ô∏è', 'üòä', 'üòÇ', 'üòç', 'ü§î', 'üòé', 'üëç', 'üëã', 'üéâ', 'üíï', 'üòò', 'ü•∞', 'üòÅ', 'üò¢', 'üò°', 'ü§Ø'];

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π
function renderProfiles(profilesToRender) {
    const container = document.getElementById('profilesContainer');
    container.innerHTML = '';
    
    profilesToRender.forEach(profile => {
        const profileElement = document.createElement('div');
        profileElement.className = 'col-lg-3 col-md-4 col-sm-6 mb-4';
        profileElement.innerHTML = `
            <div class="profile-card">
                <div class="profile-img" style="background-color: ${getRandomAvatar(profile.id)};"></div>
                <div class="profile-info">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="profile-name">${profile.name}</div>
                        <div class="profile-age">${profile.age}</div>
                    </div>
                    <div class="profile-location">
                        <i class="fas fa-map-marker-alt"></i>
                        ${profile.location}
                    </div>
                    <div class="interests">
                        ${profile.interests.map(interest => `<span class="interest-badge">${interest}</span>`).join('')}
                    </div>
                    <div class="d-flex justify-content-between align-items-center mt-2">
                        <div>
                            <small class="text-muted">${profile.online ? '<span class="pulse-online"></span> –û–Ω–ª–∞–π–Ω' : `–ë—ã–ª(–∞) ${profile.lastOnline}`}</small>
                        </div>
                        <span class="badge bg-light text-dark">${profile.gender}</span>
                    </div>
                    <button class="btn btn-message mt-3" data-id="${profile.id}">
                        <i class="far fa-envelope me-2"></i>–ù–∞–ø–∏—Å–∞—Ç—å
                    </button>
                </div>
            </div>
        `;
        container.appendChild(profileElement);
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
    document.querySelectorAll('.btn-message').forEach(button => {
        button.addEventListener('click', function() {
            const profileId = this.getAttribute('data-id');
            openMessageModal(profileId);
        });
    });
}

// –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π
function filterProfiles() {
    const nameFilter = document.getElementById('filterName').value.toLowerCase();
    const ageMin = parseInt(document.getElementById('filterAgeMin').value) || 18;
    const ageMax = parseInt(document.getElementById('filterAgeMax').value) || 99;
    const cityFilter = document.getElementById('filterCity').value;
    const interestsFilter = document.getElementById('filterInterests').value;
    const genderFilter = document.getElementById('filterGender').value;
    const statusFilter = document.getElementById('filterStatus').value;
    
    const filteredProfiles = profiles.filter(profile => {
        const matchesName = profile.name.toLowerCase().includes(nameFilter);
        const matchesAge = profile.age >= ageMin && profile.age <= ageMax;
        const matchesCity = cityFilter === '' || profile.location === cityFilter;
        const matchesInterests = interestsFilter === '' || profile.interests.includes(interestsFilter);
        const matchesGender = genderFilter === '' || profile.gender === genderFilter;
        
        let matchesStatus = true;
        if (statusFilter === '–û–Ω–ª–∞–π–Ω') {
            matchesStatus = profile.online;
        } else if (statusFilter === '–ù–µ–¥–∞–≤–Ω–æ –æ–Ω–ª–∞–π–Ω') {
            matchesStatus = !profile.online && profile.lastOnline.includes('—á–∞—Å') || profile.lastOnline.includes('–º–∏–Ω—É—Ç');
        }
        
        return matchesName && matchesAge && matchesCity && matchesInterests && matchesGender && matchesStatus;
    });
    
    renderProfiles(filteredProfiles);
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function openMessageModal(profileId) {
    const profile = profiles.find(p => p.id == profileId);
    if (!profile) return;
    
    document.getElementById('messageUserName').textContent = profile.name;
    document.getElementById('messageUserStatus').innerHTML = profile.online 
        ? '<span class="pulse-online"></span> –û–Ω–ª–∞–π–Ω' 
        : `–ë—ã–ª(–∞) ${profile.lastOnline}`;
    
    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    loadMessages(profileId);
    
    // –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    document.getElementById('messageModal').style.display = 'block';
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –æ—Ç–∫—Ä—ã—Ç—ã–π –ø—Ä–æ—Ñ–∏–ª—å
    document.getElementById('messageModal').setAttribute('data-current-profile', profileId);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function loadMessages(profileId) {
    const messageBody = document.getElementById('messageBody');
    messageBody.innerHTML = '';
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è
    const profileMessages = messages[profileId] || [];
    
    if (profileMessages.length === 0) {
        messageBody.innerHTML = `
            <div class="d-flex flex-column align-items-center justify-content-center h-100">
                <i class="fas fa-comments fa-4x mb-3 text-muted"></i>
                <h5>–ù–∞—á–Ω–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ</h5>
                <p class="text-center text-muted">–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ</p>
            </div>
        `;
        return;
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    profileMessages.forEach(msg => {
        const messageElement = document.createElement('div');
        messageElement.className = `message ${msg.sent ? 'sent' : 'received'}`;
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≤—Ä–µ–º—è
        const time = new Date(msg.timestamp);
        const timeString = time.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });
        
        messageElement.innerHTML = `
            <div class="message-text">${msg.text}</div>
            <div class="message-time">${timeString}</div>
        `;
        
        messageBody.appendChild(messageElement);
    });
    
    // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
    messageBody.scrollTop = messageBody.scrollHeight;
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
function sendMessage() {
    const input = document.getElementById('messageInput');
    const messageText = input.value.trim();
    
    if (!messageText) return;
    
    const profileId = document.getElementById('messageModal').getAttribute('data-current-profile');
    
    if (!messages[profileId]) {
        messages[profileId] = [];
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const newMessage = {
        text: messageText,
        sent: true,
        timestamp: Date.now()
    };
    
    messages[profileId].push(newMessage);
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
    localStorage.setItem('datingMessages', JSON.stringify(messages));
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    loadMessages(profileId);
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    input.value = '';
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —ç–º–æ–¥–∑–∏, –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∞
    document.getElementById('emojiPicker').style.display = 'none';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–Ω–µ–ª–∏ —ç–º–æ–¥–∑–∏
function initEmojiPicker() {
    const emojiPicker = document.getElementById('emojiPicker');
    emojiPicker.innerHTML = '';
    
    emojis.forEach(emoji => {
        const emojiElement = document.createElement('span');
        emojiElement.className = 'emoji-item';
        emojiElement.textContent = emoji;
        emojiElement.addEventListener('click', function() {
            document.getElementById('messageInput').value += emoji;
        });
        emojiPicker.appendChild(emojiElement);
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –ø—Ä–æ—Ñ–∏–ª–µ–π
    renderProfiles(profiles);
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–Ω–µ–ª–∏ —ç–º–æ–¥–∑–∏
    initEmojiPicker();
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
    document.querySelectorAll('#filterName, #filterAgeMin, #filterAgeMax, #filterCity, #filterInterests, #filterGender, #filterStatus').forEach(element => {
        element.addEventListener('input', filterProfiles);
        element.addEventListener('change', filterProfiles);
    });
    
    // –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤
    document.getElementById('resetFilters').addEventListener('click', function() {
        document.getElementById('filterName').value = '';
        document.getElementById('filterAgeMin').value = '';
        document.getElementById('filterAgeMax').value = '';
        document.getElementById('filterCity').value = '';
        document.getElementById('filterInterests').value = '';
        document.getElementById('filterGender').value = '';
        document.getElementById('filterStatus').value = '';
        filterProfiles();
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    document.getElementById('closeMessage').addEventListener('click', function() {
        document.getElementById('messageModal').style.display = 'none';
    });
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    document.getElementById('sendMessage').addEventListener('click', sendMessage);
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ Enter
    document.getElementById('messageInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
    
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ —ç–º–æ–¥–∑–∏
    document.getElementById('emojiToggle').addEventListener('click', function() {
        const emojiPicker = document.getElementById('emojiPicker');
        emojiPicker.style.display = emojiPicker.style.display === 'block' ? 'none' : 'block';
    });
});